---
title: "ESDA - Population"
author: "Goh Si Hui"
date: "Oct 27 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  message: false
  warning: false
  freeze: true
---

# Setting the environment 
```{r}
pacman::p_load(tidyverse, purrr, sf, tmap, sfdep)
```

# Importing Datasets 

## Business data 
```{r}
respop <- read_rds("data/rds/res_coords.rds")
glimpse(respop)
```
convert to sf 
```{r}
respop_sf <- st_as_sf(respop, 
                       coords = c("longitude", "latitude"),
                       crs=4326) %>%
  st_transform(crs = 3414)

glimpse(respop_sf)
```


```{r}
dwelling <- respop_sf %>%
  group_by(postal) %>%
  summarise (TOTAL_DWELLING = sum(total_dwelling_units))

```



## Singapore Master Plan 2019 Subzone Boundary
```{r}

mpsz <-st_read(dsn = "data/spatial",
               layer = "MPSZ-2019") %>% 
  st_transform(crs = 3414)

```

```{r}
st_crs(mpsz)
```

```{r}

  tm_shape(mpsz) +
  tm_fill("forestgreen", title = "Singapore Boundary", alpha = 0.5) +
  tm_shape(respop_sf) +
  tm_dots(col = "blue", size = 0.005, title = "Business")

```

# Creating the Hexagon Layer 

```{r}
hex_layer <- st_make_grid(mpsz,
               cellsize = 400,
               what = "polygon",
               square = FALSE) %>%
  st_sf() 

hex_layer

```


```{r}
tm_shape(hex_layer) +
  tm_fill(col = "white", title = "Hexagons") +
  tm_borders(alpha = 0.5) +
  tm_layout(main.title = "Singapore with hex grid",
            main.title.position = "center",
            main.title.size = 1.0,
            legend.height = 0.35, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_compass(type="8star", size = 2, bg.color = "white", bg.alpha = 0.5) +
  tm_scale_bar(bg.color = "white", bg.alpha = 0.5) +
  tm_shape(mpsz) +
  tm_fill("forestgreen", title = "Singapore Boundary", alpha = 0.5) +
  tm_shape(respop_sf) +
  tm_dots(col = "blue", size = 0.005, title = "Business")


```

## Giving each hexagon an ID 
```{r}
hex_layer$HEX_ID <- sprintf("H%04d", seq_len(nrow(hex_layer))) %>% as.factor()
head(hex_layer)
```

## Count of HDB blocks in each hexagon 

```{r}
hex_layer$'HDB_COUNT' <- lengths(st_intersects(hex_layer, respop_sf))

```

```{r}
res_hex <- filter(hex_layer, HDB_COUNT > 0)
res_hex
```

```{r}
tm_shape(mpsz) +
  tm_fill("forestgreen", title = "Singapore Boundary", alpha = 0.5) +
  tm_shape(res_hex) +
  tm_fill(col = "white", title = "Hexagons", alpha = 1) +
  tm_borders(alpha = 0.2) +
  tm_layout(main.title = "Honeycomb grid corresponding to HDB Residential Estates",
            main.title.position = "center",
            main.title.size = 1.0,
            legend.height = 0.35, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_compass(type="8star", size = 2, bg.color = "white", bg.alpha = 0.5) +
  tm_scale_bar(bg.color = "white", bg.alpha = 0.5) +
  tm_shape(respop_sf) +
  tm_dots(col = "blue", size = 0.001, title = "Bus Stops") +
  tm_grid(alpha = 0.2)
```



## Sum of Dwellings in each hexagon 

First find out which blocks are in which hexagon 
```{r}
res_hex <- st_intersection(respop_sf, hex_layer) %>%
  st_drop_geometry() %>%
  select(c(postal,total_dwelling_units, HEX_ID))
head(res_hex)

```

Aggregate by hexagon 
```{r}
dwelling_hex <- res_hex %>%
  group_by(HEX_ID) %>%
  summarise(TOTAL_DWELLING = sum(total_dwelling_units))

head(dwelling_hex)

```

## Hexagons only with dwelling

```{r}

hex_layer <- left_join(hex_layer, dwelling_hex, by = join_by(HEX_ID))
head(hex_layer)

```

```{r}
dwell_hex <- filter(hex_layer, TOTAL_DWELLING > 0)
dwell_hex
```

```{r}
tm_shape(mpsz) +
  tm_fill("forestgreen", title = "Singapore Boundary", alpha = 0.5) +
  tm_shape(dwell_hex) +
  tm_fill("TOTAL_DWELLING",
          style = "quantile",
          palette = "Blues",
          title = "Total Dwelling") +
  tm_borders(alpha = 0.2) +
  tm_layout(main.title = "HDB Dwelling",
            main.title.position = "center",
            main.title.size = 1.0,
            legend.height = 0.35, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_compass(type="8star", size = 2, bg.color = "white", bg.alpha = 0.5) +
  tm_scale_bar(bg.color = "white", bg.alpha = 0.5) 
```


# Is there any signs of spatial clustering? 

```{r}

knn6_nb <- dwell_hex %>% st_centroid() %>% st_knn(k=6)
head(knn6_nb, n = 3)

```

```{r}
dwell_knn6 <- dwell_hex %>%
  mutate(
    nb = knn6_nb,
    wt = st_inverse_distance(nb, geometry,
                             scale = 1,
                             alpha = 1)
  )

```

## Global Measure of Spatial Autocorrelation 

```{r}
global_moran_perm(
  dwell_knn6$TOTAL_DWELLING,
  dwell_knn6$nb,
  dwell_knn6$wt,
  nsim = 99
)

```
I is 0.14372, which is more than 0, showing signs of clustering 

## Local  Measure of Spatial Autocorrelation 

### Calculating Local Moran's I 

```{r}
lmi_dwell <- dwell_knn6 %>% 
  mutate(local_moran = local_moran(
    TOTAL_DWELLING, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)

```

### Plotting Local Moran's I and p-value 

```{r}

 tmap_arrange(
    tm_shape(mpsz) +
      tm_fill(col="green") +
      tm_borders(alpha = 0.5) +
      tm_shape(lmi_dwell) +
      tm_polygons("ii"),
    tm_shape(mpsz) +
      tm_fill(col="green") +
      tm_borders(alpha = 0.5) +
      tm_shape(lmi_dwell) +
      tm_polygons("p_ii_sim",
              breaks = c(0, 0.001, 0.01, 0.05, 1),
              labels = c("0.001", "0.01", "0.05", "Not sig"),
              palette = "YlOrRd"
              ),
    ncol = 2
  )


```

### Plotting LISA Map 

```{r}

tm_shape(mpsz) +
  tm_fill(col="white")+
  tm_borders(alpha = 0.5) +
  tm_shape(lmi_dwell %>% filter(p_ii_sim < 0.05)) +
  tm_polygons("mean") + 
  tm_layout(
    main.title = "LISA for HDB Residences",
    main.title.position = "center",
    main.title.size = 1
  )

```